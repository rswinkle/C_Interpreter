
int main()
{

	char a;
	short b = 1;
	int c = 3;
	double d;

	print sizeof a;
	print sizeof b;
	print sizeof c;
	print sizeof d;

	print sizeof(a);
	print sizeof(b);
	print sizeof(c);
	print sizeof(d);

	/*
	 * error, not allowed without ()
	print sizeof char;
	print sizeof short;
	print sizeof int;
	print sizeof double;
	*/

	print sizeof(char);
	print sizeof(short);
	print sizeof(int);
	print sizeof(double);

	// 4 ie sizeof(int)
	// 5 ie sizeof(int) + 1
	// 3 ie sizeof(short) + 1
	print sizeof (1+b);
	print sizeof 100+b;
	print sizeof b+1;

	// gcc and clang both report 1 and only give a warning
	// with -pedantic (no warning even with -Wall)
	//
	// It's non-standard but makes sense as people often use
	// void* for untyped arrays (ie byte arrays) instead of 
	// using char* or uint8_t* like they should
	print sizeof(void);

	return 0;
}
